#입력 문자열에서 두 번 이상 나타나는 고유 한 대소 문자를 구분하지 않는 알파벳 문자와 숫자의 개수를 반환하는 함수를 작성합니다. 입력 문자열은 알파벳 (대문자와 소문자 모두)과 숫자 만 포함한다고 가정 할 수 있습니다.

#Example
#"abcde" -> 0 # no characters repeats more than once
#"aabbcde" -> 2 # 'a' and 'b'
#"aabBcde" -> 2 # 'a' occurs twice and 'b' twice (`b` and `B`)
#"indivisibility" -> 1 # 'i' occurs six times
#"Indivisibilities" -> 2 # 'i' occurs seven times and 's' occurs twice
#"aA11" -> 2 # 'a' and '1'
#"ABBA" -> 2 # 'A' and 'B' each occur twice
#duplicateCount(text){
#  //...

#문제 요구사항 해석 : 1. 대소문자가 다르게 포함되는지 확인할 수있다. 2. 중복문자가 무엇인지 확인할 수 있다. 3. 중복문자의 갯수를 확인할 수 있다. 
#문제 해결 방안1 : 배열과 for문을 활용해 보자. 문자열 내부에 있는 문자마다 몇회 중복되었는지 확인할 수 있도록 이중 리스트를 이용하자.
#문제 해결 방안2 : Pandas의 메서드를 활용해 보자. 
#딕셔너리를 이용해서 키 : 밸류 활용

def duplication();
  count = {}
  c= input('문자를 입력하세요 : ')
  c = c.upper()
  c_count = '0'
  lists = list(C) #리스트에 문자 단위로 자료를 삽입
  Kind_dup = 0 # 중복 문자 종류 수 
  count_dup =' \n 상세내용 : '
  result = '중복되는 문자 : '
  
  if len (set(C)) == len (C):
    print('0 #no chararters') # 겹치는 문자가 없을 경우 출력
for i in lists:
  try:
    count[i] +=1# 입력된 문자를 key하고 value에 +1을 함. 
  except: 
    count[i] =1 
for j in list(count):
  if count[j] > 1:
    result = result + '%s, %j #중복문자 추가 입력
    count_dup = count_dup + '%s는 %d개,' %(j,count[j])
    kind_dup += 1 #중복 문자의 가짓수
result = '중복 문자의 가짓수 : %d개 \n' %kind_dpu + kind+count_dup
print(reusult)
return (result)
