# 중첩된 배열을 매개변수로 받아 각 하위 배열에서 정확히 하나의 요소를 가지는 고유 배열의 수를 반환하는 함수를 작성하세요.

# 예시): solve([[1,2],[4],[5,6]])은 4개의 배열이 생성가능합니다.([1,4,5],[1,4,6],[2,4,5],[2,4,6]).

# 중복은 카운트에 포함하지 않습니다.
# [[1,2],[4],[5,6]]) -> 4
# [[1,2],[4,4],[5,6,6]] -> 4
# [[1,2],[3,4],[5,6]] -> 8
# [[1,2,3],[3,4,6,6,7],[8,9,10,12,5,6]] -> 72

# 풀이
# 내부 배열1에서 겹치지 않는 수의 갯수 * 내부 배열2에서 겹치지 않는 수의 갯수 * ~~ 내부 배열n 에서 겹치지 않는 수의 갯수
# 배열 내부에 요소 갯수 카운트, 배열 내부에 distinct 한 숫자 갯수
# a[0].count(1) 내부배열의 카운트

# a[2][3] 이중 리스트 안의 값
# list2 = [[0]*11 for i in range(m)]

def mutliarray():
    n = int(input('내부 배열수를 입력하세요 :'))
    m = int(input('내부 배열의 요소 개수를 입력하세요 :'))
    # a[n][m]
    list2 = []
    list1 = [list2]
    list2 = [0 * m]
    list1 = [list2]
    for i in list1:

        for j in list2:
            k = 0
            while k < m:
                j = input('내부 배열 요소를 입력하세요 :')
                list2[k] = j
                k = k + 1
