#Quiz 1
#소수만을 곱하여 숫자의 원래 수를 계산한다.
#숫자 N을 지정하면 원시 값을 계산하십시오.

#numPrimorial (3) ==> return (30)
#2 * 3 * 5 = 30

#numPrimorial (5) ==> return (2310)
#2 * 3 * 5 * 7 * 11 = 2310

#numPrimorial (6) ==> return (30030)
#2 * 3 * 5 * 7 * 11 * 13 = 30030


def numPrimorial():
    prime = int(input('소수 갯수 입력:'))
    m = 1
    n=10000

    a = [False, False] + [True] * (n - 1)
    primes = []

    for i in range(2, n + 1):
        if a[i]:
            primes.append(i)
            for j in range(2 * i, n + 1, i):
                a[j] = False
    lenth=len(primes)

    if prime < lenth:


        primes_picked = primes[:prime]


    else:
        n = n * 2
        a = [False, False] + [True] * (n - 1)
        primes = []

        for i in range(2, n + 1):
            if a[i]:
                primes.append(i)
                for j in range(2 * i, n + 1, i):
                    a[j] = False

        primes_picked = primes[:prime]



    for i in primes_picked:
        m = m * i
    return print(m)

if __name__ == '__main__':
    numPrimorial()
